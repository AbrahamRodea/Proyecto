unidades<-c()
print(paste("Tienes", elije, "puntos dispomibles"))
w<-as.numeric(readline("Coloca el numero de la unidad que deseas agregar a tu lista: "))
while (suma <= elije) {
points<-as.numeric(datos1[[3]][[w]])
suma<- suma + points
unidades<-c(unidades,w)
if (suma <= elije){
print(paste("Tu numero de puntos hasta ahora es: ", suma))
print(paste("Te quedan: ", elije + 60 - suma, "puntos"))
print(paste("Tu lista tiene: ",length(unidades),"unidades"))
print(subset(datos1, datos1[, 3] <= (elije+60-suma)))
w<-as.numeric(readline("Coloca el numero de la unidad que deseas agregar a tu lista: "))
listadeunidades<<-unidades
lista_de_unidades1<-data.frame(
Nombre<-datos1[listadeunidades,1],
Numero_de_miniaturas<-datos1[listadeunidades,2],
Puntos<-datos1[listadeunidades,3],
Tipo<-datos1[listadeunidades,4]
)
} else if ( suma > elije + 60){
print("Has sobrepasado el numero de puntos permitido en este modo de juego, no puedes usar esta lista")
} else if ( elije <= suma & suma <= elije + 60 ){
print("Listo! A continuación se mostrará su lista de unidades")
View(lista_de_unidades1)
}
}
}
crea_tu_lista_de_ejercito()
crea_tu_lista_de_ejercito<-function(p){ # Nombramos la funcion
#Las siguientes condiciones definen que base de datos se usara en funcion de la facion elegida por el usuario
if( faccion == 1){ # Aqui es indispensable que "facion" se haya asignado previamente
datos1<<-as.data.frame(read.csv("Datos/Puntos de ejercito  - Marines espaciales.csv")) #Las bases de datos se leen como datafames
} else if (faccion == 2 ){
datos1<<-as.data.frame(read.csv("Datos/Puntos de ejercito  - Tau.csv"))
}else if (faccion == 3 ){
datos1<<-as.data.frame(read.csv("Datos/Puntos de ejercito  - Tiranido.csv"))
} else if (faccion == 4 ){
datos1<<-as.data.frame(read.csv("Datos/Puntos de ejercito  - Necron.csv"))
}
print(datos1) # Imprimimos la base de datos para que el usuario conozca sus unidades y el puntaje de las mismas
#Asiganamos el valor de los siguientes objetos que seran usados dentro de un ciclo while, todos se asignan con un valor inicial de 0
suma<-0
unidades<-c() # Este vector es indispensable para imprimir la lista del usuario
print(paste("Tienes", elije, "puntos disponibles")) # Hacemos del conocimiento del usuario la cantidad de puntos con los que dispone, la cantidad de puntos varia en funcion de su eleccion del tipo de partida
w<-as.numeric(readline("Coloca el numero de la unidad que deseas agregar a tu lista: ")) # El usuario debe colocar el numero de la unidad que desea implementar en su lista
while (suma <= elije) { # La condicion para que el usuario pueda incluir nuevas unidades a su lista es que la suma de puntos de estas no sobrepase el puntaje del tipo de partida elejida por el usuario
points<-as.numeric(datos1[[3]][[w]]) # Esta linea extrae el puntaje de la unidad elejida por el usuario, la columna es "3" debido a que esta columna contiene los puntos de las unidades, este valor es el que usaremos en la suma, los renglones estan definidos por w que es numero de la unidad elegida por el usuario
suma<- suma + points # Asigamos al objeto "suma" la suma de los puntos de cada una de las unidades elegidas por el usuario, por ello asignamos a "suma" el valor de 0 previamente
unidades<-c(unidades,w) #Este vector almacena cada una de las iteraciones del ciclo while, es decir, cada una de las posiciones elegidas por el usuario. Almacena las iteraciones ya que el vector se contiene a si mismo, esto le permite almacenar cada valor de "W" que es el definido por el usuario
if (suma <= elije){ # La siguiente condicion tiene como objetivo informar al usuario el estado de su lista
print(paste("Tu numero de puntos hasta ahora es: ", suma)) # Informa cuantos puntos ha sumado hasta ese momento en su lista
print(paste("Te quedan: ", elije + 60 - suma, "puntos")) # Informa la cantidad de puntos que le quedan disponibles
print(paste("Tu lista tiene: ",length(unidades),"unidades")) # Informa el numero de unidades que contiene su lista, basicamente, el numero de iteraciones del while
print(subset(datos1, datos1[, 3] <= (elije+60-suma)))
w<-as.numeric(readline("Coloca el numero de la unidad que deseas agregar a tu lista: "))
listadeunidades<<-unidades
lista_de_unidades1<-data.frame(
Nombre<-datos1[listadeunidades,1],
Numero_de_miniaturas<-datos1[listadeunidades,2],
Puntos<-datos1[listadeunidades,3],
Tipo<-datos1[listadeunidades,4]
)
} else if ( suma > elije + 60){
print("Has sobrepasado el numero de puntos permitido en este modo de juego, no puedes usar esta lista")
} else if ( elije <= suma & suma <= elije + 60 ){
print("Listo! A continuación se mostrará su lista de unidades")
View(lista_de_unidades1)
}
}
}
crea_tu_lista_de_ejercito()
crea_tu_lista_de_ejercito<-function(p){ # Nombramos la funcion
#Las siguientes condiciones definen que base de datos se usara en funcion de la facion elegida por el usuario
if( faccion == 1){ # Aqui es indispensable que "facion" se haya asignado previamente
datos1<<-as.data.frame(read.csv("Datos/Puntos de ejercito  - Marines espaciales.csv")) #Las bases de datos se leen como datafames
} else if (faccion == 2 ){
datos1<<-as.data.frame(read.csv("Datos/Puntos de ejercito  - Tau.csv"))
}else if (faccion == 3 ){
datos1<<-as.data.frame(read.csv("Datos/Puntos de ejercito  - Tiranido.csv"))
} else if (faccion == 4 ){
datos1<<-as.data.frame(read.csv("Datos/Puntos de ejercito  - Necron.csv"))
}
print(datos1) # Imprimimos la base de datos para que el usuario conozca sus unidades y el puntaje de las mismas
#Asiganamos el valor de los siguientes objetos que seran usados dentro de un ciclo while, todos se asignan con un valor inicial de 0
suma<-0
unidades<-c() # Este vector es indispensable para imprimir la lista del usuario
print(paste("Tienes", elije, "puntos disponibles")) # Hacemos del conocimiento del usuario la cantidad de puntos con los que dispone, la cantidad de puntos varia en funcion de su eleccion del tipo de partida
w<-as.numeric(readline("Coloca el numero de la unidad que deseas agregar a tu lista: ")) # El usuario debe colocar el numero de la unidad que desea implementar en su lista
while (suma <= elije) { # La condicion para que el usuario pueda incluir nuevas unidades a su lista es que la suma de puntos de estas no sobrepase el puntaje del tipo de partida elejida por el usuario
points<-as.numeric(datos1[[3]][[w]]) # Esta linea extrae el puntaje de la unidad elejida por el usuario, la columna es "3" debido a que esta columna contiene los puntos de las unidades, este valor es el que usaremos en la suma, los renglones estan definidos por w que es numero de la unidad elegida por el usuario
suma<- suma + points # Asigamos al objeto "suma" la suma de los puntos de cada una de las unidades elegidas por el usuario, por ello asignamos a "suma" el valor de 0 previamente
unidades<-c(unidades,w) #Este vector almacena cada una de las iteraciones del ciclo while, es decir, cada una de las posiciones elegidas por el usuario. Almacena las iteraciones ya que el vector se contiene a si mismo, esto le permite almacenar cada valor de "W" que es el definido por el usuario
if (suma <= elije){ # La siguiente condicion tiene como objetivo informar al usuario el estado de su lista
print(paste("Tu numero de puntos hasta ahora es: ", suma)) # Informa cuantos puntos ha sumado hasta ese momento en su lista
print(paste("Te quedan: ", elije + 60 - suma, "puntos")) # Informa la cantidad de puntos que le quedan disponibles
print(paste("Tu lista tiene: ",length(unidades),"unidades")) # Informa el numero de unidades que contiene su lista, basicamente, el numero de iteraciones del while
w<-as.numeric(readline("Coloca el numero de la unidad que deseas agregar a tu lista: "))
listadeunidades<<-unidades
lista_de_unidades1<-data.frame(
Nombre<-datos1[listadeunidades,1],
Numero_de_miniaturas<-datos1[listadeunidades,2],
Puntos<-datos1[listadeunidades,3],
Tipo<-datos1[listadeunidades,4]
)
} else if ( suma > elije + 60){
print("Has sobrepasado el numero de puntos permitido en este modo de juego, no puedes usar esta lista")
} else if ( elije <= suma & suma <= elije + 60 ){
print("Listo! A continuación se mostrará su lista de unidades")
View(lista_de_unidades1)
}
}
}
crea_tu_lista_de_ejercito()
crea_tu_lista_de_ejercito<-function(p){ # Nombramos la funcion
#Las siguientes condiciones definen que base de datos se usara en funcion de la facion elegida por el usuario
if( faccion == 1){ # Aqui es indispensable que "facion" se haya asignado previamente
datos1<<-as.data.frame(read.csv("Datos/Puntos de ejercito  - Marines espaciales.csv")) #Las bases de datos se leen como datafames
} else if (faccion == 2 ){
datos1<<-as.data.frame(read.csv("Datos/Puntos de ejercito  - Tau.csv"))
}else if (faccion == 3 ){
datos1<<-as.data.frame(read.csv("Datos/Puntos de ejercito  - Tiranido.csv"))
} else if (faccion == 4 ){
datos1<<-as.data.frame(read.csv("Datos/Puntos de ejercito  - Necron.csv"))
}
print(datos1) # Imprimimos la base de datos para que el usuario conozca sus unidades y el puntaje de las mismas
#Asiganamos el valor de los siguientes objetos que seran usados dentro de un ciclo while, todos se asignan con un valor inicial de 0
suma<-0
unidades<-c() # Este vector es indispensable para imprimir la lista del usuario
print(paste("Tienes", elije, "puntos disponibles")) # Hacemos del conocimiento del usuario la cantidad de puntos con los que dispone, la cantidad de puntos varia en funcion de su eleccion del tipo de partida
w<-as.numeric(readline("Coloca el numero de la unidad que deseas agregar a tu lista: ")) # El usuario debe colocar el numero de la unidad que desea implementar en su lista
while (suma <= elije) { # La condicion para que el usuario pueda incluir nuevas unidades a su lista es que la suma de puntos de estas no sobrepase el puntaje del tipo de partida elejida por el usuario
points<-as.numeric(datos1[[3]][[w]]) # Esta linea extrae el puntaje de la unidad elejida por el usuario, la columna es "3" debido a que esta columna contiene los puntos de las unidades, este valor es el que usaremos en la suma, los renglones estan definidos por w que es numero de la unidad elegida por el usuario
suma<- suma + points # Asigamos al objeto "suma" la suma de los puntos de cada una de las unidades elegidas por el usuario, por ello asignamos a "suma" el valor de 0 previamente
unidades<-c(unidades,w) #Este vector almacena cada una de las iteraciones del ciclo while, es decir, cada una de las posiciones elegidas por el usuario. Almacena las iteraciones ya que el vector se contiene a si mismo, esto le permite almacenar cada valor de "W" que es el definido por el usuario
if (suma <= elije){ # La siguiente condicion tiene como objetivo informar al usuario el estado de su lista
print(paste("Tu numero de puntos hasta ahora es: ", suma)) # Informa cuantos puntos ha sumado hasta ese momento en su lista
print(paste("Te quedan: ", elije + 60 - suma, "puntos")) # Informa la cantidad de puntos que le quedan disponibles
print(paste("Tu lista tiene: ",length(unidades),"unidades")) # Informa el numero de unidades que contiene su lista, basicamente, el numero de iteraciones del while
print(subset(datos1, datos1[, 3] <= (elije+60-suma)))
w<-as.numeric(readline("Coloca el numero de la unidad que deseas agregar a tu lista: "))
listadeunidades<<-unidades
lista_de_unidades1<-data.frame(
Nombre<-datos1[listadeunidades,1],
Numero_de_miniaturas<-datos1[listadeunidades,2],
Puntos<-datos1[listadeunidades,3],
Tipo<-datos1[listadeunidades,4]
)
} else if ( suma > elije + 60){
print("Has sobrepasado el numero de puntos permitido en este modo de juego, no puedes usar esta lista")
} else if ( elije <= suma & suma <= elije + 60 ){
print("Listo! A continuación se mostrará su lista de unidades")
View(lista_de_unidades1)
}
}
}
l
crea_tu_lista_de_ejercito()
ejercito<-function(x){
faccion<<- as.numeric( readline( prompt = "Las facciones del juego son: Marines espaciales(1), Tau(2), Tiranidos(3) y Necrones(4), coloca el numero de tu faccion: \n "))
if( faccion == 1 ){
puntos<-read.csv( "Datos/Puntos de ejercito  - Marines espaciales.csv" )
print( "Has elegido a los angeles de la muerte del emperador")
print( "Estas son las unidades disponibles: ")
print(paste( puntos[[1]]))
} else if ( faccion == 2 ){
puntos<-read.csv("Datos/Puntos de ejercito  - Tau.csv")
print( "Has elegido el bien mayor")
print( "Estas son las unidades disponibles: ")
print(paste( puntos[[1]]))
} else if ( faccion == 3){
puntos<-read.csv("Datos/Puntos de ejercito  - Tiranido.csv")
print( "Hambreeeeeeeee")
print( "Estas son las unidades disponibles: ")
print(paste( puntos[[1]]))
} else if ( faccion == 4){
puntos<-read.csv("Datos/Puntos de ejercito  - Necron.csv")
print( "¿Por qué dar un nombre a la totalidad?")
print( "Estas son las unidades disponibles: ")
print(paste( puntos[[1]]))
}  else {
print("Has seleccionado una facción no disponible")
ejercito()
}
}
ejercito() #Para ejecutar La función no es necesario colocar ningun valor
elije_tipo_de_partida<-function(y){
modos_de_juego<-c("patrulla","escaramuza","estandar")
puntos_de_partida<-c( 500,1000,2000 )
partidas_disponibles<-names( puntos_de_partida )<-modos_de_juego
print(paste("Los puntajes de partida disponibles son: ", puntos_de_partida ))
elije<<-as.numeric(readline("Elige el numero de puntos al que deseas jugar tu partida: "))
if (!(elije %in% puntos_de_partida)){
print("Has seleccionado un puntaje no disponible")
elije_tipo_de_partida()
} else if ( elije == 500){
print(paste("Has elgido el modo de juego de: ", modos_de_juego[[1]]))
} else if ( elije == 1000){
print(paste("Has elgido el modo de juego de: ", modos_de_juego[[2]]))
} else if ( elije == 2000){
print(paste("Has elgido el modo de juego de: ", modos_de_juego[[3]]))
}
}
elije_tipo_de_partida() #Para ejecutar La función no es necesario colocar ningun valor
crea_tu_lista_de_ejercito<-function(p){
if( faccion == 1){
datos1<<-as.data.frame(read.csv("Datos/Puntos de ejercito  - Marines espaciales.csv"))
} else if (faccion == 2 ){
datos1<<-as.data.frame(read.csv("Datos/Puntos de ejercito  - Tau.csv"))
}else if (faccion == 3 ){
datos1<<-as.data.frame(read.csv("Datos/Puntos de ejercito  - Tiranido.csv"))
} else if (faccion == 4 ){
datos1<<-as.data.frame(read.csv("Datos/Puntos de ejercito  - Necron.csv"))
}
print(datos1)
suma<-0
unidades<-c()
print(paste("Tienes", elije, "puntos disponibles"))
w<-as.numeric(readline("Coloca el numero de la unidad que deseas agregar a tu lista: "))
while (suma <= elije) {
points<-as.numeric(datos1[[3]][[w]])
suma<- suma + points
unidades<-c(unidades,w)
if (suma <= elije){
print(paste("Tu numero de puntos hasta ahora es: ", suma))
print(paste("Te quedan: ", elije + 60 - suma, "puntos"))
print(paste("Tu lista tiene: ",length(unidades),"unidades"))
print(subset(datos1, datos1[, 3] <= (elije+60-suma)))
w<-as.numeric(readline("Coloca el numero de la unidad que deseas agregar a tu lista: "))
listadeunidades<<-unidades
lista_de_unidades1<-data.frame(
Nombre<-datos1[listadeunidades,1],
Numero_de_miniaturas<-datos1[listadeunidades,2],
Puntos<-datos1[listadeunidades,3],
Tipo<-datos1[listadeunidades,4]
)
} else if ( suma > elije + 60){
print("Has sobrepasado el numero de puntos permitido en este modo de juego, no puedes usar esta lista")
} else if ( elije <= suma & suma <= elije + 60 ){
print("Listo! A continuación se mostrará su lista de unidades")
View(lista_de_unidades1)
}
}
}
crea_tu_lista_de_ejercito() #Para ejecutar La función no es necesario colocar ningun valor
while (suma <= elije) {
points<-as.numeric(datos1[[3]][[w]])
suma<- suma + points
unidades<-c(unidades,w)
listadeunidades<<-unidades
lista_de_unidades1<-data.frame(
Nombre<-datos1[listadeunidades,1],
Numero_de_miniaturas<-datos1[listadeunidades,2],
Puntos<-datos1[listadeunidades,3],
Tipo<-datos1[listadeunidades,4]
)
datos_disponibles<- subset(datos1, datos1[, 3] <= (elije+60-suma))
indices_disponibles <- as.numeric(rownames(datos_disponibles))
if (length(indices_disponibles)>0){
w <- sample(indices_disponibles, 1)
else {break}
while (suma <= elije) {
points<-as.numeric(datos1[[3]][[w]])
suma<- suma + points
unidades<-c(unidades,w)
listadeunidades<<-unidades
lista_de_unidades1<-data.frame(
Nombre<-datos1[listadeunidades,1],
Numero_de_miniaturas<-datos1[listadeunidades,2],
Puntos<-datos1[listadeunidades,3],
Tipo<-datos1[listadeunidades,4]
)
datos_disponibles<- subset(datos1, datos1[, 3] <= (elije+60-suma))
indices_disponibles <- as.numeric(rownames(datos_disponibles))
if (length(indices_disponibles)>0){
w <- sample(indices_disponibles, 1)
else {break}
crear_lista_de_ejercito_automatico() #Para ejecutar La función no es necesario colocar ningun valor
crear_lista_de_ejercito_automatico<-function(p){
if( faccion == 1){
datos1<<-as.data.frame(read.csv("Datos/Puntos de ejercito  - Marines espaciales.csv"))
} else if (faccion == 2 ){
datos1<<-as.data.frame(read.csv("Datos/Puntos de ejercito  - Tau.csv"))
}else if (faccion == 3 ){
datos1<<-as.data.frame(read.csv("Datos/Puntos de ejercito  - Tiranido.csv"))
} else if (faccion == 4 ){
datos1<<-as.data.frame(read.csv("Datos/Puntos de ejercito  - Necron.csv"))
}
suma<-0
contador<-0
unidades<-c()
datos_disponibles<- subset(datos1, datos1[, 3] <= (elije+60-suma))
indices_disponibles <- as.numeric(rownames(datos_disponibles))
w <- sample(indices_disponibles, 1)
while (suma <= elije) {
points<-as.numeric(datos1[[3]][[w]])
suma<- suma + points
unidades<-c(unidades,w)
listadeunidades<<-unidades
lista_de_unidades1<-data.frame(
Nombre<-datos1[listadeunidades,1],
Numero_de_miniaturas<-datos1[listadeunidades,2],
Puntos<-datos1[listadeunidades,3],
Tipo<-datos1[listadeunidades,4]
)
datos_disponibles<- subset(datos1, datos1[, 3] <= (elije+60-suma))
indices_disponibles <- as.numeric(rownames(datos_disponibles))
if (length(indices_disponibles)>0){
w <- sample(indices_disponibles, 1)
else {break}
ejercito<-function(x){
faccion<<- as.numeric( readline( prompt = "Las facciones del juego son: Marines espaciales(1), Tau(2), Tiranidos(3) y Necrones(4), coloca el numero de tu faccion: \n "))
if( faccion == 1 ){
puntos<-read.csv("Datos/Puntos de ejercito  - Marines espaciales.csv")
print( "Has elegido a los angeles de la muerte del emperador")
print("Estas son las unidades disponibles:")
print(paste(puntos[[1]]))
} else if ( faccion == 2 ){
puntos<-read.csv("Datos/Puntos de ejercito  - Tau.csv")
print( "Has elegido el bien mayor")
print( "Estas son las unidades disponibles: ")
print(paste( puntos[[1]]))
} else if ( faccion == 3){
puntos<-read.csv("Datos/Puntos de ejercito  - Tiranido.csv")
print( "Hambreeeeeeeee")
print( "Estas son las unidades disponibles: ")
print(paste( puntos[[1]]))
} else if ( faccion == 4){
puntos<-read.csv("Datos/Puntos de ejercito  - Necron.csv")
print( "¿Por qué dar un nombre a la totalidad?")
print( "Estas son las unidades disponibles: ")
print(paste(puntos[[1]]))
}
else {
print("Has seleccionado una facción no disponible")
ejercito()
}
}
ejercito() #Para ejecutar La función no es necesario colocar ningun valor
elije_tipo_de_partida<-function(y){
modos_de_juego<-c("patrulla","escaramuza","estandar") #Creamos un vector para los tipos de partida
puntos_de_partida<-c(500,1000,2000) #Asiganmos el numero de puntos necesarios para cada partida
names(puntos_de_partida)<-modos_de_juego
print(paste("Los puntajes de partida disponibles son: ",puntos_de_partida))
elije<<-as.numeric(readline("Elige el numero de puntos al que deseas jugar tu partida (500,1000, o 2000): ")) ### Colocar "<<-" para que la función asigne un valo al objeto a nivel global
if (!(elije %in% puntos_de_partida)){
print("Has seleccionado un puntaje no disponible")
elije_tipo_de_partida()
}
else {
print(paste("Has elgido el modo de juego de: ", names(which(puntos_de_partida == elije))))
}
}
elije_tipo_de_partida()
crea_tu_lista_de_ejercito<-function(p){
if( faccion == 1){
datos1<<-as.data.frame(read.csv("Datos/Puntos de ejercito  - Marines espaciales.csv"))
} else if (faccion == 2 ){
datos1<<-as.data.frame(read.csv("Datos/Puntos de ejercito  - Tau.csv"))
}else if (faccion == 3 ){
datos1<<-as.data.frame(read.csv("Datos/Puntos de ejercito  - Tiranido.csv"))
} else if (faccion == 4 ){
datos1<<-as.data.frame(read.csv("Datos/Puntos de ejercito  - Necron.csv"))
}
print(datos1)
suma<-0
contador<-0
unidades<-c()
print(paste("Tienes", elije, "puntos dispomibles"))
w<-as.numeric(readline("Coloca el numero de la unidad que deseas agregar a tu lista: "))
while (suma <= elije) {
points<-as.numeric(datos1[[3]][[w]])
suma<- suma + points
unidades<-c(unidades,w)
if (suma <= elije){
print(paste("Tu numero de puntos hasta ahora es: ", suma))
print(paste("Te quedan: ", elije + 60 - suma, "puntos"))
print(paste("Tu lista tiene: ",length(unidades),"unidades"))
print(subset(datos1, datos1[, 3] <= (elije+60-suma)))
w<-as.numeric(readline("Coloca el numero de la unidad que deseas agregar a tu lista: "))
listadeunidades<<-unidades
lista_de_unidades1<-data.frame(
Nombre<-datos1[listadeunidades,1],
Numero_de_miniaturas<-datos1[listadeunidades,2],
Puntos<-datos1[listadeunidades,3],
Tipo<-datos1[listadeunidades,4]
)
} else if ( suma > elije + 60){
print("Has sobrepasado el numero de puntos permitido en este modo de juego, no puedes usar esta lista")
} else if ( elije <= suma & suma <= elije + 60 ){
print("Listo! A continuación se mostrará su lista de unidades")
View(lista_de_unidades1)
}
}
}
crea_tu_lista_de_ejercito()
crear_lista_de_ejercito_automatico<-function(p){
if( faccion == 1){
datos1<<-as.data.frame(read.csv("Datos/Puntos de ejercito  - Marines espaciales.csv"))
} else if (faccion == 2 ){
datos1<<-as.data.frame(read.csv("Datos/Puntos de ejercito  - Tau.csv"))
}else if (faccion == 3 ){
datos1<<-as.data.frame(read.csv("Datos/Puntos de ejercito  - Tiranido.csv"))
} else if (faccion == 4 ){
datos1<<-as.data.frame(read.csv("Datos/Puntos de ejercito  - Necron.csv"))
}
suma<-0
contador<-0
unidades<-c()
datos_disponibles<- subset(datos1, datos1[, 3] <= (elije+60-suma))
indices_disponibles <- as.numeric(rownames(datos_disponibles))
w <- sample(indices_disponibles, 1)
while (suma <= elije) {
points<-as.numeric(datos1[[3]][[w]])
suma<- suma + points
unidades<-c(unidades,w)
listadeunidades<<-unidades
lista_de_unidades1<-data.frame(
Nombre<-datos1[listadeunidades,1],
Numero_de_miniaturas<-datos1[listadeunidades,2],
Puntos<-datos1[listadeunidades,3],
Tipo<-datos1[listadeunidades,4]
)
datos_disponibles<- subset(datos1, datos1[, 3] <= (elije+60-suma))
indices_disponibles <- as.numeric(rownames(datos_disponibles))
if (length(indices_disponibles)>0){
w <- sample(indices_disponibles, 1)
}
else {break}
}
print("Listo! A continuación se mostrará su lista de unidades")
View(lista_de_unidades1)
}
crear_lista_de_ejercito_automatico()
crear_lista_de_ejercito_automatico<-function(p){ # Nombramos la funcion
#Las siguientes condiciones definen que base de datos se usara en funcion de la facion elegida por el usuario
if( faccion == 1){
datos1<<-as.data.frame(read.csv("Datos/Puntos de ejercito  - Marines espaciales.csv"))
} else if (faccion == 2 ){
datos1<<-as.data.frame(read.csv("Datos/Puntos de ejercito  - Tau.csv"))
}else if (faccion == 3 ){
datos1<<-as.data.frame(read.csv("Datos/Puntos de ejercito  - Tiranido.csv"))
} else if (faccion == 4 ){
datos1<<-as.data.frame(read.csv("Datos/Puntos de ejercito  - Necron.csv"))
}
suma<-0
contador<-0
unidades<-c()
datos_disponibles<- subset(datos1, datos1[, 3] <= (elije+60-suma)) # Asignamos un subset de datos que contiene datos de la columna 3 (columna de puntaje), esta linea es similar a la de la tercera funcion, a medida que aumenta el valor de la suma, disminuyen los datos disponibles
indices_disponibles <- as.numeric(rownames(datos_disponibles)) # Un objeto que almacena la posicion de los datos usados para alcanzar el valor maximo de "suma"
w <- sample(indices_disponibles, 1) # Toma un numero de fila al azar de los datos disponibles, usamos 1 porque solo queremos que tome un renglon a la vez
while (suma <= elije) { # Establecemos la condicion bajo la cual se puede ejecutar el codigo
points<-as.numeric(datos1[[3]][[w]]) # Esta vez "w" no esta definida por el usuario sino que es aleatoria
# Las siguientes lineas son identicas a la funcion anterior
suma<- suma + points
unidades<-c(unidades,w)
listadeunidades<<-unidades
lista_de_unidades1<-data.frame( # Creamos data frame
Nombre<-datos1[listadeunidades,1],
Numero_de_miniaturas<-datos1[listadeunidades,2],
Puntos<-datos1[listadeunidades,3],
Tipo<-datos1[listadeunidades,4]
)
datos_disponibles<- subset(datos1, datos1[, 3] <= (elije+60-suma))
indices_disponibles <- as.numeric(rownames(datos_disponibles))
if (length(indices_disponibles)>0){ # Si aun hay objetos por sumar (aun no se alcanza el valor máximo de suma), entonces se sigue tomando un renglon al azar
w <- sample(indices_disponibles, 1) # En lugar de copiar el renglon pasado solo usamos el objeto "indices_disponibles"
}
else {break}
}
print("Listo! A continuación se mostrará su lista de unidades") # Le informamos al usuario que su lista esta lista
View(lista_de_unidades1)# Imprimimos su lista
}
crear_lista_de_ejercito_automatico()
crear_lista_de_ejercito_automatico<-function(p){
if( faccion == 1){
datos1<<-as.data.frame(read.csv("Datos/Puntos de ejercito  - Marines espaciales.csv"))
} else if (faccion == 2 ){
datos1<<-as.data.frame(read.csv("Datos/Puntos de ejercito  - Tau.csv"))
}else if (faccion == 3 ){
datos1<<-as.data.frame(read.csv("Datos/Puntos de ejercito  - Tiranido.csv"))
} else if (faccion == 4 ){
datos1<<-as.data.frame(read.csv("Datos/Puntos de ejercito  - Necron.csv"))
}
suma<-0
contador<-0
unidades<-c()
datos_disponibles<- subset(datos1, datos1[, 3] <= (elije+60-suma))
indices_disponibles <- as.numeric(rownames(datos_disponibles))
w <- sample(indices_disponibles, 1)
while (suma <= elije) {
points<-as.numeric(datos1[[3]][[w]])
suma<- suma + points
unidades<-c(unidades,w)
listadeunidades<<-unidades
lista_de_unidades1<-data.frame(
Nombre<-datos1[listadeunidades,1],
Numero_de_miniaturas<-datos1[listadeunidades,2],
Puntos<-datos1[listadeunidades,3],
Tipo<-datos1[listadeunidades,4]
)
datos_disponibles<- subset(datos1, datos1[, 3] <= (elije+60-suma))
indices_disponibles <- as.numeric(rownames(datos_disponibles))
if (length(indices_disponibles)>0){
w <- sample(indices_disponibles, 1)
}
else {break}
}
print("Listo! A continuación se mostrará su lista de unidades")
View(lista_de_unidades1)
}
crear_lista_de_ejercito_automatico()#Para ejecutar La función no es necesario colocar ningun valor
